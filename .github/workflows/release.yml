name: Release

on:
  workflow_dispatch:

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build docker image for amd64
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: false

  build-arm64:
    runs-on: [self-hosted, macOS, ARM64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build docker image for arm64
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          push: false

  release:
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Set release timestamp
        id: timestamp
        run: |
          echo "RELEASE_TS=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

      - name: Create tar.gz archive
        run: |
          set -euo pipefail
          git ls-files > filelist.txt
          # Create tar from tracked files only (excludes .git automatically)
          tar -czf Rsafd_${RELEASE_TS}.tar.gz --mtime="$(date -u +%Y-%m-%d)" --transform 's#^#Rsafd/#' -T filelist.txt
          ls -lh Rsafd_${RELEASE_TS}.tar.gz

      - name: Create zip archive
        run: |
          set -euo pipefail
          files=$(git ls-files)
          mkdir ziproot
          (cd ziproot && for f in $files; do mkdir -p "$(dirname "$f")"; cp -p "../$f" "$f"; done)
          (cd ziproot && zip -rq ../Rsafd_${RELEASE_TS}.zip .)
          ls -lh Rsafd_${RELEASE_TS}.zip

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${RELEASE_TS}
          release_name: Release ${RELEASE_TS}
          draft: false
          prerelease: false

      - name: Upload .tar.gz to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Rsafd_${RELEASE_TS}.tar.gz
          asset_name: Rsafd_${RELEASE_TS}.tar.gz
          asset_content_type: application/gzip

      - name: Upload .zip to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Rsafd_${RELEASE_TS}.zip
          asset_name: Rsafd_${RELEASE_TS}.zip
          asset_content_type: application/zip
