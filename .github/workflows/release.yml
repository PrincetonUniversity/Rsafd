name: Release

on:
  workflow_dispatch:

jobs:
  build-amd64:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build docker image for amd64
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64
          push: false

  build-arm64:
    runs-on: [self-hosted, macOS, ARM64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build docker image for arm64
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/arm64
          push: false

  release:
    needs: [build-amd64, build-arm64]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Set release timestamp
        id: timestamp
        run: |
          ts=$(date +'%Y%m%d%H%M%S')
          echo "RELEASE_TS=$ts" >> $GITHUB_ENV
          echo "release_ts=$ts" >> $GITHUB_OUTPUT

      - name: Create tar.gz archive (no timestamp in filename)
        run: |
          set -euo pipefail
          git ls-files > filelist.txt
          # Create tar from tracked files only (excludes .git automatically)
          tar -czf Rsafd.tar.gz --mtime="$(date -u +%Y-%m-%d)" --transform 's#^#Rsafd/#' -T filelist.txt
          ls -lh Rsafd.tar.gz

      - name: Create zip archive (no timestamp in filename)
        run: |
          set -euo pipefail
          files=$(git ls-files)
          mkdir ziproot
          (cd ziproot && for f in $files; do mkdir -p "$(dirname "$f")"; cp -p "../$f" "$f"; done)
          (cd ziproot && zip -rq ../Rsafd.zip .)
          ls -lh Rsafd.zip

      - name: Compute checksums and git sha
        id: checksums
        run: |
          git_sha=$(git rev-parse --short HEAD)
          tar_sum=$(sha256sum Rsafd.tar.gz | cut -d ' ' -f1)
            zip_sum=$(sha256sum Rsafd.zip | cut -d ' ' -f1)
          echo "GIT_SHA=$git_sha" >> $GITHUB_ENV
          echo "TAR_SHA256=$tar_sum" >> $GITHUB_ENV
          echo "ZIP_SHA256=$zip_sum" >> $GITHUB_ENV
          echo "git_sha=$git_sha" >> $GITHUB_OUTPUT
          echo "tar_sha256=$tar_sum" >> $GITHUB_OUTPUT
          echo "zip_sha256=$zip_sum" >> $GITHUB_OUTPUT
          echo "Computed checksums:"; echo $tar_sum Rsafd.tar.gz; echo $zip_sum Rsafd.zip

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.timestamp.outputs.release_ts }}
          release_name: Release ${{ steps.timestamp.outputs.release_ts }}
          body: |
            Timestamp: ${{ steps.timestamp.outputs.release_ts }}
            Commit: ${{ steps.checksums.outputs.git_sha }}
            SHA256 (tar.gz): ${{ steps.checksums.outputs.tar_sha256 }}
            SHA256 (zip): ${{ steps.checksums.outputs.zip_sha256 }}
          draft: false
          prerelease: false

      - name: Upload .tar.gz to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Rsafd.tar.gz
          asset_name: Rsafd.tar.gz
          asset_content_type: application/gzip

      - name: Upload .zip to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: Rsafd.zip
          asset_name: Rsafd.zip
          asset_content_type: application/zip
